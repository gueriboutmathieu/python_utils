name: ðŸ§© Check python code

on:
  workflow_call:
    inputs:
      python-version:
        description: "Python version to use"
        type: string
        required: false
        default: "3.11"
      pytest-root:
        description: "Root directory for pytest"
        type: string
        required: false
        default: "tests"
      env-vars:
        description: "Additional environment variables to set"
        type: string
        required: false
        default: '{}'

jobs:
  check-python-code:
    name: Check python code
    runs-on: ubuntu-latest
    permissions: # for py-cov-action
      pull-requests: write
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Setup env vars
        run: |
          ENV_VARS=$(echo '${{ inputs.env-vars }}' | jq -r 'to_entries | map("\(.key)=\(.value)") | .[]')
          for ENV_VAR in $ENV_VARS; do
            echo "$ENV_VAR" >> $GITHUB_ENV
          done

      - name: Install and setup uv
        run: |
          echo "Installing uv"
          sudo apt-get update
          curl -LsSf https://astral.sh/uv/install.sh | sh
          uv python install ${{ inputs.python-version }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}

      - name: Install dependencies
        working-directory: .
        run: |
          uv venv
          uv sync

      - name: Ruff (linter and code formatter)
        working-directory: .
        run: uv run ruff check

      - name: Pyright (type check)
        working-directory: .
        run: uv run pyright

      - name: Run Pytest
        working-directory: .
        run: |
          uv run coverage run -m pytest ${{ inputs.pytest-root }} -x

      - name: Coverage comment
        uses: py-cov-action/python-coverage-comment-action@v3
        with:
          GITHUB_TOKEN: ${{ github.token }}
          COVERAGE_PATH: .
