name: Validate alembic migrations
description: "Runs alembic upgrade, check and downgrade commands to validate migrations"

inputs:
  sql_user:
    description: "Database user"
    required: false
    default: "postgres"
  sql_password:
    description: "Database password"
    required: false
    default: "postgres"
  sql_host:
    description: "Database host"
    required: false
    default: "localhost"
  sql_port:
    description: "Database port"
    required: false
    default: "5432"
  sql_database:
    description: "Database name"
    required: false
    default: "test_db"
  root-directory:
    description: "The root path from where this action will be executed, aka the root path of the app"
    required: false
    default: "."

runs:
  using: "composite"

  steps:
    - name: Start PostgreSQL service
      run: |
        docker run --name postgres -e POSTGRES_USER=${{ inputs.sql_user }} -e POSTGRES_PASSWORD=${{ inputs.sql_password }} -e POSTGRES_DB=${{ inputs.sql_database }} -d -p ${{ inputs.sql_port }}:5432 postgres
      shell: bash

    - name: Wait for PostgreSQL to be ready
      run: |
        until docker exec postgres pg_isready -U ${{ inputs.sql_user }} -h ${{ inputs.sql_host }} -p ${{ inputs.sql_port }}; do sleep 1; done
      shell: bash

    - name: Run Alembic upgrade
      working-directory: ${{ inputs.root-directory }}
      run: uv run alembic upgrade head
      shell: bash
      env:
        SQL_USER: ${{ inputs.sql_user }}
        SQL_PASSWORD: ${{ inputs.sql_password }}
        SQL_HOST: ${{ inputs.sql_host }}
        SQL_PORT: ${{ inputs.sql_port }}
        SQL_DATABASE: ${{ inputs.sql_database }}

    - name: Check for migration differences
      working-directory: ${{ inputs.root-directory }}
      run: uv run alembic check
      shell: bash
      env:
        SQL_USER: ${{ inputs.sql_user }}
        SQL_PASSWORD: ${{ inputs.sql_password }}
        SQL_HOST: ${{ inputs.sql_host }}
        SQL_PORT: ${{ inputs.sql_port }}
        SQL_DATABASE: ${{ inputs.sql_database }}

    - name: Run Alembic downgrade
      working-directory: ${{ inputs.root-directory }}
      run: uv run alembic downgrade base
      shell: bash
      env:
        SQL_USER: ${{ inputs.sql_user }}
        SQL_PASSWORD: ${{ inputs.sql_password }}
        SQL_HOST: ${{ inputs.sql_host }}
        SQL_PORT: ${{ inputs.sql_port }}
        SQL_DATABASE: ${{ inputs.sql_database }}
